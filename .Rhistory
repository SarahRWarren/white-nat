page_text <- as.vector(na.omit(page_text))
page_df <- data.frame(user = as.character(page_user),
date = as.character(page_date),
time = as.character(page_time),
text = as.character(page_text))
ladies_forum <- rbind(ladies_forum, page_df)
library(janitor)
library(textreadr)
#install.packages('xml2')
#install.packages('rvest')
library(xml2)
library(rvest)
library(tidyverse)
ideo_philo_urls <- c("https://www.stormfront.org/forum/t451603/")
#generate a url for each page
for(i in 2:502){
ideo_philo_urls <- c(ideo_philo_urls, paste0("https://www.stormfront.org/forum/t451603-",
i,
"/"))
}
ideology_forum <- data.frame(user = c(),
date = c(),
time = c(),
text = c())
for(i in 1:length(ideo_philo_urls)){
page <- read_html(url(ideo_philo_urls[i]))
#read the text from the posts
page_text_prelim <- page %>%
html_nodes("#posts .alt1") %>%
html_text()
#extract the text from the posts. Every other index in this vector is the post, with the remaining indices being missing.
page_text <- page_text_prelim[seq(1, 20, 2)]
page_date_time <- page %>%
html_nodes("#posts .thead:nth-child(1)") %>%
html_text()
page_date_time_prelim <- page_date_time %>%
data.frame() %>%
janitor::clean_names() %>%
mutate(date = stringr::str_extract(x,
"\\d{2}\\-\\d{2}\\-\\d{4}"),
time = stringr::str_extract(x,
"\\d{2}\\:\\d{2}\\s[A-Z]{2}")) %>%
filter(!is.na(date)) %>%
select(date,
time)
page_date <- as.vector(page_date_time_prelim$date)
page_time <- as.vector(page_date_time_prelim$time)
page_user_prelim <- page %>%
html_nodes("#posts .alt2") %>%
html_text() %>%
data.frame() %>%
janitor::clean_names() %>%
mutate(text = as.character(x),
user_time_detect = as.numeric(stringr::str_detect(text,
"Posts:")),
user = stringr::str_extract(text,
"([A-z0-9]+.)+")) %>%
filter(user_time_detect == 1) %>%
select(user)
page_user <- as.vector(page_user_prelim$user)
#as of 5/6/2019 this errors on the final loop because the last page only has 7 posts and the page_date and page_time. I have the following if condition to prevent the last loop from erroring.
if(i < 502){
page_df <- data.frame(user = as.character(page_user),
date = as.character(page_date),
time = as.character(page_time),
text = as.character(page_text))
ideology_forum <- rbind(ideology_forum, page_df)
}
}
#This deals with that last loop that failed
page_text <- as.vector(na.omit(page_text))
page_df <- data.frame(user = as.character(page_user),
date = as.character(page_date),
time = as.character(page_time),
text = as.character(page_text))
ideology_forum <- rbind(ideology_forum, page_df)
library(tidyverse)
brainwash <- read_rds("data/saved/unclean_brainwash.Rds") %>%
mutate(forum = "How We Get Brainwashed")
natsoc <- read_rds("data/saved/unclean_natsoc.Rds") %>%
mutate(forum = "National Socialism")
poswn <- read_rds("data/saved/unclean_pos_wn.Rds") %>%
mutate(forum = "Positive White Nationalism")
conservative <- read_rds("data/saved/unclean_conservative.Rds") %>%
mutate(forum = "Conservatives")
##CLEAN
conservative <- conservative %>%
mutate(id = seq_along(user))
clean_con <- conservative %>%
mutate(text_nore = stringr::str_replace_all(text,
"Re: Conservatives",
""),
text_noquote = stringr::str_replace_all(text_nore,
"Quote.(\\n)*.*(\\n)*((.*)|(\\n*))*\\n{2}",
""),
text_nobreak = stringr::str_replace_all(text_noquote,
"\\c*",
""),
text_nopunct = stringr::str_replace_all(text_nobreak,
"[[:punct:]]*",
""),
length = str_count(text_nopunct,
"\\w+"))
write_rds(clean_con, "data/clean_conservatives.Rds")
natsoc <- natsoc %>%
mutate(id = seq_along(user))
natsoc_fix <- natsoc[-c(3294, 3481, 3552, 4102, 4308, 4434, 4908, 5015),]
clean_ns <- natsoc_fix %>%
mutate(text_nore = stringr::str_replace_all(text,
"Re: National Socialism",
""),
text_noquote = stringr::str_replace_all(text_nore,
"Quote.(\\n)*.*(\\n)*((.*)|(\\n*))*\\n{2}",
""),
text_nobreak = stringr::str_replace_all(text_noquote,
"\\c*",
""),
text_nopunct = stringr::str_replace_all(text_nobreak,
"[[:punct:]]*",
""),
length = str_count(text_nopunct,
"\\w+"))
write_rds(clean_ns, "data/clean_national_socialism.Rds")
pos_wn <- poswn %>%
mutate(id = seq_along(user))
clean_wn <- pos_wn %>%
mutate(text_nore = stringr::str_replace_all(text,
"Re: The way forward: Positive White Nationalism",
""),
text_noquote = stringr::str_replace_all(text_nore,
"Quote.(\\n)*.*(\\n)*((.*)|(\\n*))*\\n{2}",
""),
text_nobreak = stringr::str_replace_all(text_noquote,
"\\c*",
""),
text_nopunct = stringr::str_replace_all(text_nobreak,
"[[:punct:]]*",
""),
length = str_count(text_nopunct,
"\\w+"))
write_rds(clean_wn, "data/clean_positive_white_nationalism.Rds")
#####breaking - DO NOT RUN
brainwash <- brainwash %>%
mutate(id = seq_along(user))
brainwash <- brainwash %>%
mutate(id = seq_along(user))
clean_brain <- brainwash %>%
mutate(text_nore = stringr::str_replace_all(text,
"Re: How We Get Brainwashed!",
""),
#text_noquote = stringr::str_replace_all(text_nore,
#                                       "Quote.(\\n)*.*(\\n)*((.*)|(\\n*))*\\n{2}",
#                                      "")),
text_nobreak = stringr::str_replace_all(text_noquote,
"\\c*",
""))
brainwash <- brainwash %>%
mutate(id = seq_along(user))
clean_brain <- brainwash %>%
mutate(text_nore = stringr::str_replace_all(text,
"Re: How We Get Brainwashed!",
""),
text_nobreak = stringr::str_replace_all(text_noquote,
"\\c*",
""))
brainwash <- brainwash %>%
mutate(id = seq_along(user))
write_rds(brainwash, "data/broken_brainwash.Rds")
library(tidyverse)
library(viridis)
#####LADIES
intro <- read_rds("data/clean_ladies_introduction.Rds") %>%
mutate(forum = "Introduce Yourselves Here")
preg <- read_rds("data/clean_ladies_preg.Rds") %>%
mutate(forum = "The Pregnant/TTC Thread")
white <- read_rds("data/clean_ladies_white.Rds") %>%
mutate(forum = "Contribution to the White Race")
ladies <- rbind(intro, preg, white)
write_rds(ladies, "data/ladies.Rds")
brainwash <- brainwash %>%
mutate(id = seq_along(user),
forum = "Brainwash")
wn <- read_rds("data/clean_positive_white_nationalism.Rds") %>%
mutate(forum = "Positive White Nationalism")
conservative <- read_rds("data/clean_conservative.Rds") %>%
mutate(forum = "Conservatives")
ns <- read_rds("data/clean_national_socialism.Rds") %>%
mutate(forum = "National Socialism")
wn <- read_rds("data/clean_positive_white_nationalism.Rds") %>%
mutate(forum = "Positive White Nationalism")
wn <- read_rds("data/clean_positive_white_nationalism.Rds") %>%
mutate(forum = "Positive White Nationalism")
conservative <- read_rds("data/clean_conservative.Rds") %>%
mutate(forum = "Conservatives")
conservative <- read_rds("data/clean_conservatives.Rds") %>%
mutate(forum = "Conservatives")
ns <- read_rds("data/clean_national_socialism.Rds") %>%
mutate(forum = "National Socialism")
ideo_philo <- rbind(wn, conservative, ns)
write_rds(ideo_philo, "data/ideo_philo.Rds")
ip <- read_rds("data/ideo_philo.Rds")
ip <- read_rds("data/ideo_philo.Rds")
user_rank <- ip %>%
group_by(user) %>%
summarise(n = n()) %>%
subset(n > 1)
ggplot(user_rank, aes(x=n, y=user)) +
geom_col() + theme_bw() +
theme(axis.text = element_text(size=3)) +
scale_x_continuous(limit=c(0,600),
breaks = c(0, 10, 20, 30, 40, 50, 100,
200, 300, 400, 500, 600),
expand = c(0,0)) +
labs(title = "Posts by User",
caption = "Posts by Username of Those Who Posted More than Once",
x= "Number of Posts",
y="Username")
summary(user_rank$n)
ggplot(user_rank, aes(x=n, y=user)) +
geom_col() + theme_bw() +
theme(axis.text = element_text(size=3)) +
scale_x_continuous(limit=c(0,600),
breaks = c(0, 10, 20, 30, 40, 50, 100,
200, 300, 400, 500),
expand = c(0,0)) +
labs(title = "Posts by User",
caption = "Posts by Username of Those Who Posted More than Once",
x= "Number of Posts",
y="Username")
ggplot(user_rank, aes(x=n, y=user)) +
geom_col() + theme_bw() +
theme(axis.text = element_text(size=3)) +
scale_x_continuous(limit=c(0,600),
breaks = c(0, 10, 20, 30, 40, 50, 100, 150, 200,
250, 300, 350, 400, 450),
expand = c(0,0)) +
labs(title = "Posts by User",
caption = "Posts by Username of Those Who Posted More than Once",
x= "Number of Posts",
y="Username")
ggplot(user_rank, aes(x=n, y=user)) +
geom_col() + theme_bw() +
theme(axis.text = element_text(size=3)) +
scale_x_continuous(limit=c(0,600),
breaks = c(0, 10, 20, 30, 40, 50, 100, 150, 200,
250, 300, 350, 400, 450),
expand = c(0,0)) +
labs(title = "Posts by User",
caption = "Posts by Username of Those Who Posted More than Once",
x= "Number of Posts",
y="Username")
ggsave("figs/user_rank_ip.png", height=20)
ggplot(user_rank, aes(x=n, y=user)) +
geom_col() + theme_bw() +
theme(axis.text = element_text(size=3)) +
scale_x_continuous(limit=c(0,450),
breaks = c(0, 10, 20, 30, 40, 50, 100, 150, 200,
250, 300, 350, 400, 450),
expand = c(0,0)) +
labs(title = "Posts by User",
caption = "Posts by Username of Those Who Posted More than Once",
x= "Number of Posts",
y="Username")
ggsave("figs/user_rank_ip.png", height=20)
user_time <- ip %>%
separate(date,
into = c('m', 'd', 'y'),
sep = '-',
remove = F) %>%
mutate(date = as.Date(ISOdate(y, m, d)),
ym = paste0(y, "-", m)) %>%
group_by(user, ym) %>%
add_count(user,
name = "n_posts") %>%
summarise(mean_length = mean(length),
n_posts = mean(n_posts)) %>%
arrange(ym) %>%
ungroup()
ggplot(user_time, aes(x=ym, y=mean_length, fill=n_posts)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Average Length",
fill = "Number of Posts")
ggsave("figs/ip_length_frequency.png", width=20)
ggplot(user_time, aes(x=ym, y=n_posts, fill=mean_length)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Number of Posts",
fill = "Average Length")
ggsave("figs/ip_frequency_length.png", width=20)
ggplot(user_time, aes(x=ym, y=mean_length, fill=n_posts)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Average Length",
fill = "Number of Posts")
ggsave("figs/ip_length_frequency.png", width=20)
ggplot(user_time, aes(x=ym, y=mean_length, fill=n_posts)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Average Length",
fill = "Number of Posts")
ggsave("figs/ip_length_frequency.png", width=20)
ggplot(user_time, aes(x=ym, y=n_posts, fill=mean_length)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Number of Posts",
fill = "Average Length")
ggsave("figs/ip_frequency_length.png", width=20)
View(user_time)
ggplot(user_time, aes(x=ym, y=mean_length, fill=n_posts)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2016-12", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Average Length",
fill = "Number of Posts")
ggsave("figs/ip_length_frequency.png", width=20)
ggplot(user_time, aes(x=ym, y=n_posts, fill=mean_length)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2016-12", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Number of Posts",
fill = "Average Length")
ggsave("figs/ip_frequency_length.png", width=20)
ggsave("figs/ip_frequency_length.png", width=20)
ggplot(user_time, aes(x=ym, y=mean_length, fill=n_posts)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2016-12", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Average Length",
fill = "Number of Posts")
ggsave("figs/ip_length_frequency.png", width=20)
all <- rbind(ladies, ip)
intro <- read_rds("data/clean_ladies_introduction.Rds") %>%
mutate(forum = "Introduce Yourselves Here")
preg <- read_rds("data/clean_ladies_preg.Rds") %>%
mutate(forum = "The Pregnant/TTC Thread")
white <- read_rds("data/clean_ladies_white.Rds") %>%
mutate(forum = "Contribution to the White Race")
ladies <- rbind(intro, preg, white)
all <- rbind(ladies, ip)
write_rds(all, "data/all_scraped.Rds")
user_rank <- all %>%
group_by(user) %>%
summarise(n = n()) %>%
subset(n > 1)
ggplot(user_rank, aes(x=n, y=user)) +
geom_col() + theme_bw() +
theme(axis.text = element_text(size=3)) +
scale_x_continuous(limit=c(0,600),
breaks = c(0, 10, 20, 30, 40, 50, 100, 150, 200,
250, 300, 350, 400, 450, 500, 550, 600),
expand = c(0,0)) +
labs(title = "Posts by User",
caption = "In All Scraped Forums",
x= "Number of Posts",
y="Username")
ggsave("figs/user_rank_all.png", height=20)
ggplot(user_rank, aes(x=n, y=user)) +
geom_col() + theme_bw() +
theme(axis.text = element_text(size=2.5)) +
scale_x_continuous(limit=c(0,600),
breaks = c(0, 10, 20, 30, 40, 50, 100, 150, 200,
250, 300, 350, 400, 450, 500, 550, 600),
expand = c(0,0)) +
labs(title = "Posts by User",
caption = "In All Scraped Forums",
x= "Number of Posts",
y="Username")
ggsave("figs/user_rank_all.png", height=20)
user_time <- all %>%
separate(date,
into = c('m', 'd', 'y'),
sep = '-',
remove = F) %>%
mutate(date = as.Date(ISOdate(y, m, d)),
ym = paste0(y, "-", m)) %>%
group_by(user, ym) %>%
add_count(user,
name = "n_posts") %>%
summarise(mean_length = mean(length),
n_posts = mean(n_posts)) %>%
arrange(ym) %>%
ungroup()
ggplot(user_time, aes(x=ym, y=mean_length, fill=n_posts)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Average Length",
fill = "Number of Posts")
ggsave("figs/all_length_frequency.png", width=20)
ggplot(user_time, aes(x=ym, y=n_posts, fill=mean_length)) +
geom_col() + theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = "2009-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "Posts Per Month-Year",
x= "Year-Month",
y="Number of Posts",
fill = "Average Length")
ggsave("figs/all_frequency_length.png", width=20)
