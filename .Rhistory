View(unigram_nrc_user)
View(unigram_bing)
View(unigram_count)
View(unigram_nrc)
View(unigram_nrc_user)
View(unigram_afinn)
View(unigram_bing)
View(unigram_nrc_user)
###plot sentiment frequency
ggplot(unigram_nrc_user, aes(x=sentiment, fill=sentiment)) +
geom_bar()
###plot sentiment frequency
ggplot(unigram_nrc_user, aes(x=sentiment, fill=sentiment)) +
geom_bar() + theme_bw() +
labs(title = "Sentiment Frequency in Women's Posts",
x = "",
y = "Frequency",
fill = "sentiment")
View(unigram_nrc_user)
ggsave("figs/sentiment_freq_ladies.png", width=10)
ggplot(unigram_nrc_user, aes(x=sentiment, fill=sentiment)) +
geom_bar() + theme_bw() +
scale_fill_manual(c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#808080",
"#ADD8E6", "#0000FF", "#E6E6FA",
"#FFC0CB")) +
labs(title = "Sentiment Frequency in Women's Posts",
x = "",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=sentiment, fill=sentiment)) +
geom_bar() + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#808080",
"#ADD8E6", "#0000FF", "#E6E6FA",
"#FFC0CB")) +
labs(title = "Sentiment Frequency in Women's Posts",
x = "",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=sentiment, fill=sentiment)) +
geom_bar() + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#E6E6FA",
"#FFC0CB")) +
labs(title = "Sentiment Frequency in Women's Posts",
x = "",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=sentiment, fill=sentiment)) +
geom_bar() + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
labs(title = "Sentiment Frequency in Women's Posts",
x = "",
y = "Frequency",
fill = "sentiment")
ggsave("figs/sentiment_freq_ladies.png", width=10)
ggsave("figs/sentiment_freq_ladies.png", width=8)
ggsave("figs/sentiment_freq_ladies.png", width=8)
ggplot(unigram_nrc_user, aes(x=sentiment, fill=sentiment)) +
geom_bar() + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "",
y = "Frequency",
fill = "sentiment")
ggsave("figs/sentiment_freq_ladies.png", width=8)
View(unigram_nrc_user)
ggplot(unigram_nrc_user, aes(x=date, y=..density.., fill=sentiment)) +
geom_histogram() +
theme_bw()
class(unigram_nrc_user$date)
as.Date(unigram_nrc_user$date)
unigram_nrc_user$date <- as.Date(unigram_nrc_user$date)
class(unigram_nrc_user$date)
ggplot(unigram_nrc_user, aes(x=date, y=..density.., fill=sentiment)) +
geom_histogram() +
theme_bw()
View(unigram_nrc_user)
unigram_nrc <- get_sentiments('nrc') %>%
filter(word != "white") %>% #white is neutral in this context
inner_join(unigram) %>%
add_count(sentiment,
sort = T) %>%
inner_join(user_rank)
unigram_nrc_user<- get_sentiments('nrc') %>%
filter(word != "white") %>% #white is neutral in this context
inner_join(unigram) %>%
group_by(user) %>%
add_count(sentiment,
sort = T) %>%
inner_join(user_rank)
# Binary positive or negative
unigram_bing <- inner_join(unigram, get_sentiments("bing")) %>%
add_count(sentiment,
name = "n_sent") %>%
add_count(sentiment,
index = id,
name = "n_sent_id") %>%
add_count(id,
name = "num_words") %>%
inner_join(user_rank)
# -5 to 5 negative to positive
unigram_afinn <- inner_join(unigram, get_sentiments("afinn"))  %>%
group_by(id) %>%
separate(date,
into = c('m', 'd', 'y'),
sep = '-',
remove = F) %>%
mutate(net_score = sum(value),
date = as.Date(ISOdate(y, m, d))) %>%
select(user,
date,
id,
word,
value,
net_score) %>%
inner_join(user_rank)
View(unigram_nrc_user)
unigram_nrc_user$date <- as.Date(unigram_nrc_user$date, "%m/%d/%Y")
class(unigram_nrc_user$date)
View(unigram_nrc_user)
unigram_nrc_user$date <- as.Date(unigram_nrc_user$date, "%m-%d-%Y")
View(unigram_nrc_user)
unigram_nrc <- get_sentiments('nrc') %>%
filter(word != "white") %>% #white is neutral in this context
inner_join(unigram) %>%
add_count(sentiment,
sort = T) %>%
inner_join(user_rank)
unigram_nrc_user<- get_sentiments('nrc') %>%
filter(word != "white") %>% #white is neutral in this context
inner_join(unigram) %>%
group_by(user) %>%
add_count(sentiment,
sort = T) %>%
inner_join(user_rank)
# Binary positive or negative
unigram_bing <- inner_join(unigram, get_sentiments("bing")) %>%
add_count(sentiment,
name = "n_sent") %>%
add_count(sentiment,
index = id,
name = "n_sent_id") %>%
add_count(id,
name = "num_words") %>%
inner_join(user_rank)
# -5 to 5 negative to positive
unigram_afinn <- inner_join(unigram, get_sentiments("afinn"))  %>%
group_by(id) %>%
separate(date,
into = c('m', 'd', 'y'),
sep = '-',
remove = F) %>%
mutate(net_score = sum(value),
date = as.Date(ISOdate(y, m, d))) %>%
select(user,
date,
id,
word,
value,
net_score) %>%
inner_join(user_rank)
sentiment_over_time <- unigram_nrc_user %>%
mutate(date = as.Date(date))
sentiment_over_time <- unigram_nrc_user %>%
mutate(date = as.Date(date, "%m/%d/%Y"))
View(sentiment_over_time)
sentiment_over_time <- unigram_nrc_user %>%
mutate(date = as.Date(date, "%m-%d-%Y"))
View(sentiment_over_time)
unigram_nrc_user <- unigram_nrc_user %>%
mutate(date = as.Date(date, "%m-%d-%Y"))
ggplot(unigram_nrc_user, aes(x=date, y=..density.., fill=sentiment)) +
geom_histogram() +
theme_bw()
ggplot(unigram_nrc_user, aes(x=date, y=..density.., fill=sentiment)) +
geom_histogram(alpha=0.5) +
theme_bw()
ggplot(unigram_nrc_user, aes(x=date, y=..density.., fill=sentiment)) +
geom_histogram(alpha=0.5) + facet_grid(vars(sentiment)) +
theme_bw()
ggplot(unigram_nrc_user, aes(x=date, y=..density.., fill=sentiment)) +
geom_point(alpha=0.5) + facet_grid(vars(sentiment)) +
theme_bw()
ggplot(unigram_nrc_user, aes(x=date, y=..density.., fill=sentiment)) +
geom_histogram(alpha=0.5) + facet_grid(vars(sentiment)) +
theme_bw()
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_histogram(alpha=0.5) +
theme_bw()
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_histogram(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "",
y = "Frequency",
fill = "sentiment")
View(unigram_nrc_user)
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_histogram(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
geom_vline(xintercept = "2009-01-20", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2013-01-20", linetype="dashed",
color = "gray", size=1.5) +
geom_vline(xintercept = "2017-01-20", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2017-08-11", linetype="dotted",
color = "red", size=1.5) +
geom_vline(xintercept = "2021-01-06", linetype="dashed",
color = "gray", size=1.5) +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "Date",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_histogram(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "Date",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_histogram(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
scale_x_continuous() +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "Date",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_histogram(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "Date",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_density(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "Date",
y = "Frequency",
fill = "sentiment")
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_density(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "Date",
y = "Frequency",
fill = "sentiment") + facet_grid(vars(sentiment))
ggsave("figs/sentiment-over-time-women.png", width = 10, height = 10)
ggplot(unigram_nrc_user, aes(x=date, fill=sentiment)) +
geom_density(alpha=0.5) + theme_bw() +
scale_fill_manual(values = c("#FF0000", "#FFA500", "#89a203",
"#A020F0", "#FFFF00", "#000080",
"#ADD8E6", "#0000FF", "#228B22",
"#FFC0CB")) +
scale_y_continuous() +
labs(title = "NRC Sentiment Frequency in Women's Posts",
x = "Date",
y = "Density",
fill = "NRC Sentiment") + facet_grid(vars(sentiment))
ggsave("figs/sentiment-over-time-women.png", width = 10, height = 10)
ggsave("figs/sentiment-over-time-women.png", width = 10, height = 10)
View(unigram_bing)
View(unigram_afinn)
class(unigram_afinn$date)
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_bar()
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col()
summary(unigram_afinn$value)
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
scale_y_continuous(limit=c(7,-7))
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col()
class(unigram_afinn$value)
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
scale_y_continuous()
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
ylim(10, -10)
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
scale_y_continuous(limits = c(-7, 7))
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col()
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw()
summary(unigram_afinn$value)
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw() +
scale_y_continuous(limits = c(-10, 10),
breaks = c(-10, -9, -8, -7, -6, -5, -4, -3,
-2, -1, 0, 1, 2, 3, 4, 5, 6, 7,
8, 9, 10))
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw() +
scale_y_continuous(limits = c(-10, 10),
breaks = c(-10, -5, 0, 5, 10))
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw()
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw() + scale_y_continuous()
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw() + scale_y_continuous() +
labs(title = "Female AFINN Sentiment Analysis Over Time",
x = "Date",
y = "AFINN Polarity Score")
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw() + scale_y_continuous() +
ylim(-10, 10) +
labs(title = "Female AFINN Sentiment Analysis Over Time",
x = "Date",
y = "AFINN Polarity Score")
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw() + scale_y_continuous() +
ylim=c(-10,10) +
labs(title = "Female AFINN Sentiment Analysis Over Time",
x = "Date",
y = "AFINN Polarity Score")
ggplot(unigram_afinn, aes(x=date, y=value)) + geom_col() +
theme_bw() + scale_y_continuous() +
labs(title = "Female AFINN Sentiment Analysis Over Time",
x = "Date",
y = "AFINN Polarity Score")
ggsave("figs/afinn-over-time-women.png")
ggsave("figs/afinn-over-time-women.png")
View(ladies)
View(ladies)
View(ladies)
write.csv(ladies, "data/ladies.csv")
install.packages("stm")
library(stm)
library(tidyverse)
all <- read_rds("data/ideo_philo.Rds")
write.csv(all, "data/ideo_philo.csv")
all <- read_rds("data/ideo_philo.Rds")
View(all)
View(all)
View(all)
for_analysis <- all %>%
select(user, date, time, text, length, forum, id)
for_analysis <- all %>%
select(user, date, time, text, length, forum, id) %>%
rename(text = document)
for_analysis <- all %>%
select(user, date, time, text, length, forum, id) %>%
rename(document = text)
View(for_analysis)
for_analysis <- all %>%
select(user, date, time, text, length, forum, id) %>%
rename(documents = text)
processed <- textProcessor(for_analysis$documents, metadata = for_analysis)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
View(out)
plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
processed <- textProcessor(for_analysis$documents, metadata = for_analysis)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta,
lower.thresh = 15)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
stm(documents = out$documents, vocab = out$vocab,
K = 20, prevalence =~ forum + s(date),
max.em.its = 75, data = out$meta,
init.type = "Spectral")
poliblogPrevFit <- stm(documents = out$documents, vocab = out$vocab,
K = 20, prevalence =~ forum + date,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
View(for_analysis)
poliblogPrevFit <- stm(documents = out$documents, vocab = out$vocab,
K = 20, prevalence =~ forum,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
View(poliblogPrevFit)
library(stm)
library(tidyverse)
df <- read_rds("data/ideo_philo.Rds")
write.csv(df, "data/ideo_philo.csv")
all <- read_csv("data/ideo_philo.csv")
for_analysis <- all %>%
select(user, date, time, text, length, forum, id) %>%
rename(documents = text)
processed <- textProcessor(for_analysis$documents, metadata = for_analysis)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta,
lower.thresh = 15)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
#plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
wnPrevFit <- stm(documents = out$documents, vocab = out$vocab,
K = 20, prevalence =~ forum,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
plot(wnPrevFit, type = "summary", xlim = c(0, .3))
window()
plot(wnPrevFit, type = "summary", xlim = c(0, .3))
window()
windows()
plot(wnPrevFit, type = "summary", xlim = c(0, .3))
View(out)
out$meta$forum <- as.factor(out$meta$forum)
prep <- estimateEffect(1:20 ~ forum, wnPrevFit,
+ meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
out$meta$forum <- as.factor(out$meta$forum)
prep <- estimateEffect(1:20 ~ forum, wnPrevFit,
+ meta = out$meta, uncertainty = "Global")
prep <- estimateEffect(1:20 ~ forum, wnPrevFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
Call:
estimateEffect(formula = 1:20 ~ forum, stmobj = wnPrevFit,
metadata = out$meta, uncertainty = "Global")
estimateEffect(formula = 1:20 ~ forum, stmobj = wnPrevFit,
metadata = out$meta, uncertainty = "Global")
plot.estimateEffect()
plot.estimateEffect(prep)
plot.estimateEffect(prep, method = "pointestimate")
library(stm)
library(tidyverse)
df <- read_rds("data/ideo_philo.Rds")
write.csv(df, "data/ideo_philo.csv")
all <- read_csv("data/ideo_philo.csv")
for_analysis <- all %>%
select(user, date, time, text, length, forum, id) %>%
rename(documents = text)
processed <- textProcessor(for_analysis$documents, metadata = for_analysis)
out <- prepDocuments(processed$documents, processed$vocab, processed$meta,
lower.thresh = 15)
docs <- out$documents
vocab <- out$vocab
meta <-out$meta
#plotRemoved(processed$documents, lower.thresh = seq(1, 200, by = 100))
wnPrevFit <- stm(documents = out$documents, vocab = out$vocab,
K = 20, prevalence =~ forum,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
out$meta$forum <- as.factor(out$meta$forum)
prep <- estimateEffect(1:20 ~ forum, wnPrevFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
estimateEffect(formula = 1:20 ~ forum, stmobj = wnPrevFit,
metadata = out$meta, uncertainty = "Global")
wnPrevFit <- stm(documents = out$documents, vocab = out$vocab,
K = 20, prevalence =~ forum,
max.em.its = 75, data = out$meta,
init.type = "Spectral")
out$meta$forum <- as.factor(out$meta$forum)
prep <- estimateEffect(1:20 ~ forum, wnPrevFit,
meta = out$meta, uncertainty = "Global")
summary(prep, topics=1)
forum_model <- estimateEffect(formula = 1:20 ~ forum, stmobj = wnPrevFit,
metadata = out$meta, uncertainty = "Global")
windows()
plot(wnPrevFit, type = "summary", xlim = c(0, .3))
View(prep)
plot(prep, covariate = "forum", topics = c(3, 7, 20),
model = poliblogPrevFit)
windows()
plot(prep, covariate = "forum", topics = c(3, 7, 20),
model = poliblogPrevFit)
windows()
plot(wnPrevFit, type = "summary", xlim = c(0, .3))
windows()
plot(prep, covariate = "forum", topics = c(16, 15, 14, 17, 18, 20),
model = poliblogPrevFit)
forum_date <- stm(out$documents, out$vocab, K = 20,
+ prevalence =~ forum + s(date), content =~ forum,
+ max.em.its = 75, data = out$meta, init.type = "Spectral")
forum_date <- stm(out$documents, out$vocab, K = 20,
prevalence =~ forum + s(date), content =~ forum,
max.em.its = 75, data = out$meta, init.type = "Spectral")
forum_date <- stm(out$documents, out$vocab, K = 20,
prevalence =~ forum + date, content =~ forum,
max.em.its = 75, data = out$meta, init.type = "Spectral")
forum_date <- stm(out$documents, out$vocab, K = 20,
prevalence =~ forum + date, content =~ forum,
max.em.its = 75, data = out$meta, init.type = "Spectral")
windows()
plot(forum_date, type = "summary", xlim = c(0, .3))
